Microchip MPLAB XC8 Compiler V1.41 ()

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v1.41/dat/en_msgs.txt -cs \
  -h+dist/default/production/fan.X.production.sym \
  --cmf=dist/default/production/fan.X.production.cmf -z -Q18F45K20 \
  -o/tmp/xcXlgq0pn -Mdist/default/production/fan.X.production.map -E1 \
  -ver=XC8 -ASTACK=066h-05ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0600h-06FFhx122 \
  -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=060h-0FFh,0100h-01FFhx5 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcXN2dvV2.obj dist/default/production/fan.X.production.obj 

Object code version is 3.11

Machine type is 18F45K20

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXN2dvV2.obj
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/fan.X.production.obj
                smallconst                          600      600       3E      300       0
                text32                             126C     126C       36      31F       0
                text31                             135E     135E       12      31F       0
                text30                             11BE     11BE       3E      31F       0
                text29                             1346     1346       18      31F       0
                text28                             1390     1390        8      31F       0
                text27                              BC2      BC2       D2      31F       0
                text26                             1388     1388        8      31F       0
                text25                             1180     1180       3E      31F       0
                text24                             1102     1102       40      31F       0
                text23                             132E     132E       18      31F       0
                text22                             1010     1010       66      31F       0
                text21                             1398     1398        6      31F       0
                text20                              F1C      F1C       84      31F       0
                text19                              FA0      FA0       70      31F       0
                text18                             12F0     12F0       26      31F       0
                text17                              C94      C94       B4      31F       0
                text16                             1234     1234       38      31F       0
                text15                             12A2     12A2       28      31F       0
                text14                             1370     1370        E      31F       0
                text13                              9FC      9FC       F4      31F       0
                text12                              D48      D48       AE      31F       0
                text11                             11FC     11FC       38      31F       0
                text10                              63E      63E      1AC      31F       0
                text9                               908      908       F4      31F       0
                text8                               AF0      AF0       D2      31F       0
                text7                               E8C      E8C       90      31F       0
                text6                               7EA      7EA      11E      31F       0
                text5                              137E     137E        A      31F       0
                text4                              12CA     12CA       26      31F       0
                text3                              1316     1316       18      31F       0
                text2                               DF6      DF6       96      31F       0
                text1                              1142     1142       3E      31F       0
                text0                              10BE     10BE       44      31F       0
                cstackCOMRAM                          1        1       5C        1       1
                dataBANK0                            64       64        2       60       1
                bssBANK0                             60       60        4       60       1
                dataCOMRAM                           5D       5D        2        1       1
                cinit                              1076     1076       48      31F       0
                idataBANK0                         13A0     13A0        2      31F       0
                idataCOMRAM                        139E     139E        2      31F       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text32                             126C     126C       36         0
                text31                             135E     135E       12         0
                text30                             11BE     11BE       3E         0
                text29                             1346     1346       18         0
                text28                             1390     1390        8         0
                text27                              BC2      BC2       D2         0
                text26                             1388     1388        8         0
                text25                             1180     1180       3E         0
                text24                             1102     1102       40         0
                text23                             132E     132E       18         0
                text22                             1010     1010       66         0
                text21                             1398     1398        6         0
                text20                              F1C      F1C       84         0
                text19                              FA0      FA0       70         0
                text18                             12F0     12F0       26         0
                text17                              C94      C94       B4         0
                text16                             1234     1234       38         0
                text15                             12A2     12A2       28         0
                text14                             1370     1370        E         0
                text13                              9FC      9FC       F4         0
                text12                              D48      D48       AE         0
                text11                             11FC     11FC       38         0
                text10                              63E      63E      1AC         0
                text9                               908      908       F4         0
                text8                               AF0      AF0       D2         0
                text7                               E8C      E8C       90         0
                text6                               7EA      7EA      11E         0
                text5                              137E     137E        A         0
                text4                              12CA     12CA       26         0
                text3                              1316     1316       18         0
                text2                               DF6      DF6       96         0
                text1                              1142     1142       3E         0
                text0                              10BE     10BE       44         0
                cinit                              1076     1076       48         0
                idataBANK0                         13A0     13A0        2         0
                idataCOMRAM                        139E     139E        2         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       3E         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       5C         1
                dataCOMRAM                           5D       5D        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                dataBANK0                            64       64        2         1
                bssBANK0                             60       60        4         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005E  00005F         1       1  COMRAM  
                bssBANK0                       000060  000006  000066        60       1  BANK0   
                smallconst                     000600  00003E  00063E       300       0  SMALLCON
                text10                         00063E  000D64  0013A2       31F       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000066-0000FF               9A
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           00005F-00005F                1
                         000066-0005FF              59A
        CODE             000004-0005FF              5FC
                         0013A2-007FFF             6C5E
        COMRAM           00005F-00005F                1
        CONST            000004-0005FF              5FC
                         0013A2-007FFF             6C5E
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0013A2-007FFF             6C5E
        RAM              000066-0005FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       0013A2-007FFF              100
        STACK            000066-0005FF              59A

                                  Symbol Table

?___awdiv                cstackCOMRAM 000007
?___awmod                cstackCOMRAM 000001
?___awtoft               cstackCOMRAM 00000F
?___ftadd                cstackCOMRAM 000022
?___ftmul                cstackCOMRAM 000013
?___ftpack               cstackCOMRAM 000001
?___fttol                cstackCOMRAM 00003F
?___wmul                 cstackCOMRAM 00000F
?_eval_poly              cstackCOMRAM 00002E
?_frexp                  cstackCOMRAM 000001
?_get_temp               cstackCOMRAM 00004E
?_log                    cstackCOMRAM 00003A
?_strlen                 cstackCOMRAM 000001
SerialTransmit@buffer    cstackCOMRAM 000007
SerialTransmit@size      cstackCOMRAM 000009
WriteCommon@value        cstackCOMRAM 000005
WriteCtrl@value          cstackCOMRAM 000006
WriteData@value          cstackCOMRAM 000006
WriteLCD@i               cstackCOMRAM 00000B
WriteLCD@message         cstackCOMRAM 000007
_ADCON0                  (abs)        000FC2
_ADCON0bits              (abs)        000FC2
_ADCON1                  (abs)        000FC1
_ADCON2                  (abs)        000FC0
_ADRESH                  (abs)        000FC4
_ANSEL                   (abs)        000F7E
_ANSELbits               (abs)        000F7E
_BAUDCONbits             (abs)        000FB8
_InitLCD                 text27       000BC2
_OSCCONbits              (abs)        000FD3
_PIR1bits                (abs)        000F9E
_PORTCbits               (abs)        000F82
_PORTD                   (abs)        000F83
_PORTEbits               (abs)        000F84
_RCIF                    (abs)        007CF5
_RCREG                   (abs)        000FAE
_RCSTA                   (abs)        000FAB
_SPBRG                   (abs)        000FAF
_SSPADD                  (abs)        000FC8
_SSPBUF                  (abs)        000FC9
_SSPCON1bits             (abs)        000FC6
_SSPCON2bits             (abs)        000FC5
_SSPSTATbits             (abs)        000FC7
_SerialReceive           text26       001388
_SerialTransmit          text24       001102
_TRISAbits               (abs)        000F92
_TRISC                   (abs)        000F94
_TRISCbits               (abs)        000F94
_TRISD                   (abs)        000F95
_TRISEbits               (abs)        000F96
_TRMT                    (abs)        007D61
_TXIF                    (abs)        007CF4
_TXREG                   (abs)        000FAD
_TXSTA                   (abs)        000FAC
_WriteCommon             text30       0011BE
_WriteCtrl               text29       001346
_WriteData               text23       00132E
_WriteLCD                text22       001010
__CFG_BOREN$SBORDIS      (abs)        000000
__CFG_BORV$18            (abs)        000000
__CFG_CCP2MX$PORTC       (abs)        000000
__CFG_CP0$OFF            (abs)        000000
__CFG_CP1$OFF            (abs)        000000
__CFG_CP2$OFF            (abs)        000000
__CFG_CP3$OFF            (abs)        000000
__CFG_CPB$OFF            (abs)        000000
__CFG_CPD$OFF            (abs)        000000
__CFG_EBTR0$OFF          (abs)        000000
__CFG_EBTR1$OFF          (abs)        000000
__CFG_EBTR2$OFF          (abs)        000000
__CFG_EBTR3$OFF          (abs)        000000
__CFG_EBTRB$OFF          (abs)        000000
__CFG_FCMEN$OFF          (abs)        000000
__CFG_FOSC$INTIO67       (abs)        000000
__CFG_HFOFST$ON          (abs)        000000
__CFG_IESO$OFF           (abs)        000000
__CFG_LPT1OSC$OFF        (abs)        000000
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$ON           (abs)        000000
__CFG_PBADEN$ON          (abs)        000000
__CFG_PWRT$OFF           (abs)        000000
__CFG_STVREN$OFF         (abs)        000000
__CFG_WDTEN$OFF          (abs)        000000
__CFG_WDTPS$32768        (abs)        000000
__CFG_WRT0$OFF           (abs)        000000
__CFG_WRT1$OFF           (abs)        000000
__CFG_WRT2$OFF           (abs)        000000
__CFG_WRT3$OFF           (abs)        000000
__CFG_WRTB$OFF           (abs)        000000
__CFG_WRTC$OFF           (abs)        000000
__CFG_WRTD$OFF           (abs)        000000
__CFG_XINST$OFF          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbank3                 bank3        000000
__Hbank4                 bank4        000000
__Hbank5                 bank5        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssBANK0              bssBANK0     000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__HdataBANK0             dataBANK0    000000
__HdataCOMRAM            dataCOMRAM   000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__HidataBANK0            idataBANK0   000000
__HidataCOMRAM           idataCOMRAM  000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000004
__Hintcode               intcode      000000
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    000000
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      000000
__Hram                   ram          000000
__Hramtop                ramtop       000600
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000000
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   00063E
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        000066
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000000
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext12                text12       000000
__Htext13                text13       000000
__Htext14                text14       000000
__Htext15                text15       000000
__Htext16                text16       000000
__Htext17                text17       000000
__Htext18                text18       000000
__Htext19                text19       000000
__Htext2                 text2        000000
__Htext20                text20       000000
__Htext21                text21       000000
__Htext22                text22       000000
__Htext23                text23       000000
__Htext24                text24       000000
__Htext25                text25       000000
__Htext26                text26       000000
__Htext27                text27       000000
__Htext28                text28       000000
__Htext29                text29       000000
__Htext3                 text3        000000
__Htext30                text30       000000
__Htext31                text31       000000
__Htext32                text32       000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbank3                 bank3        000000
__Lbank4                 bank4        000000
__Lbank5                 bank5        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssBANK0              bssBANK0     000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__LdataBANK0             dataBANK0    000000
__LdataCOMRAM            dataCOMRAM   000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__LidataBANK0            idataBANK0   000000
__LidataCOMRAM           idataCOMRAM  000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         000000
__Lintcode               intcode      000000
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    000000
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      000000
__Lram                   ram          000000
__Lramtop                ramtop       000600
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000600
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000000
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext12                text12       000000
__Ltext13                text13       000000
__Ltext14                text14       000000
__Ltext15                text15       000000
__Ltext16                text16       000000
__Ltext17                text17       000000
__Ltext18                text18       000000
__Ltext19                text19       000000
__Ltext2                 text2        000000
__Ltext20                text20       000000
__Ltext21                text21       000000
__Ltext22                text22       000000
__Ltext23                text23       000000
__Ltext24                text24       000000
__Ltext25                text25       000000
__Ltext26                text26       000000
__Ltext27                text27       000000
__Ltext28                text28       000000
__Ltext29                text29       000000
__Ltext3                 text3        000000
__Ltext30                text30       000000
__Ltext31                text31       000000
__Ltext32                text32       000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        000066
__S2                     (abs)        000000
___awdiv                 text20       000F1C
___awdiv@counter         cstackCOMRAM 00000B
___awdiv@dividend        cstackCOMRAM 000007
___awdiv@divisor         cstackCOMRAM 000009
___awdiv@quotient        cstackCOMRAM 00000D
___awdiv@sign            cstackCOMRAM 00000C
___awmod                 text19       000FA0
___awmod@counter         cstackCOMRAM 000005
___awmod@dividend        cstackCOMRAM 000001
___awmod@divisor         cstackCOMRAM 000003
___awmod@sign            cstackCOMRAM 000006
___awtoft                text11       0011FC
___awtoft@c              cstackCOMRAM 00000F
___awtoft@sign           cstackCOMRAM 000012
___ftadd                 text10       00063E
___ftadd@exp1            cstackCOMRAM 00002D
___ftadd@exp2            cstackCOMRAM 00002C
___ftadd@f1              cstackCOMRAM 000022
___ftadd@f2              cstackCOMRAM 000025
___ftadd@sign            cstackCOMRAM 00002B
___ftmul                 text9        000908
___ftmul@cntr            cstackCOMRAM 000020
___ftmul@exp             cstackCOMRAM 00001C
___ftmul@f1              cstackCOMRAM 000013
___ftmul@f2              cstackCOMRAM 000016
___ftmul@f3_as_product   cstackCOMRAM 00001D
___ftmul@sign            cstackCOMRAM 000021
___ftpack                text12       000D48
___ftpack@arg            cstackCOMRAM 000001
___ftpack@exp            cstackCOMRAM 000004
___ftpack@sign           cstackCOMRAM 000005
___fttol                 text13       0009FC
___fttol@exp1            cstackCOMRAM 00004D
___fttol@f1              cstackCOMRAM 00003F
___fttol@lval            cstackCOMRAM 000049
___fttol@sign1           cstackCOMRAM 000048
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
___wmul                  text18       0012F0
___wmul@multiplicand     cstackCOMRAM 000011
___wmul@multiplier       cstackCOMRAM 00000F
___wmul@product          cstackCOMRAM 000013
__accesstop              (abs)        000060
__activetblptr           (abs)        000001
__end_of_InitLCD         text27       000C94
__end_of_SerialReceive   text26       001390
__end_of_SerialTransmit  text24       001142
__end_of_WriteCommon     text30       0011FC
__end_of_WriteCtrl       text29       00135E
__end_of_WriteData       text23       001346
__end_of_WriteLCD        text22       001076
__end_of___awdiv         text20       000FA0
__end_of___awmod         text19       001010
__end_of___awtoft        text11       001234
__end_of___ftadd         text10       0007EA
__end_of___ftmul         text9        0009FC
__end_of___ftpack        text12       000DF6
__end_of___fttol         text13       000AF0
__end_of___wmul          text18       001316
__end_of__initialization cinit        0010B0
__end_of_adcToLcd        text16       00126C
__end_of_adc_poll        text21       00139E
__end_of_clear_lcd       text28       001398
__end_of_delay           text32       0012A2
__end_of_display_mode    text15       0012CA
__end_of_display_speed   text14       00137E
__end_of_display_temp    text4        0012F0
__end_of_eval_poly       text8        000BC2
__end_of_frexp           text7        000F1C
__end_of_get_temp        text5        001388
__end_of_goto_xy         text3        00132E
__end_of_hmi_out         text2        000E8C
__end_of_init_adc        text1        001180
__end_of_integerToLcd    text17       000D48
__end_of_log             text6        000908
__end_of_main            text0        001102
__end_of_pulse_enable    text31       001370
__end_of_strlen          text25       0011BE
__end_oflog@coeff        smallconst   00061C
__initialization         cinit        001076
__mediumconst            mediumconst  000000
__pbssBANK0              bssBANK0     000060
__pcinit                 cinit        001076
__pcstackCOMRAM          cstackCOMRAM 000001
__pdataBANK0             dataBANK0    000064
__pdataCOMRAM            dataCOMRAM   00005D
__pidataBANK0            idataBANK0   0013A0
__pidataCOMRAM           idataCOMRAM  00139E
__psmallconst            smallconst   000600
__ptext0                 text0        0010BE
__ptext1                 text1        001142
__ptext10                text10       00063E
__ptext11                text11       0011FC
__ptext12                text12       000D48
__ptext13                text13       0009FC
__ptext14                text14       001370
__ptext15                text15       0012A2
__ptext16                text16       001234
__ptext17                text17       000C94
__ptext18                text18       0012F0
__ptext19                text19       000FA0
__ptext2                 text2        000DF6
__ptext20                text20       000F1C
__ptext21                text21       001398
__ptext22                text22       001010
__ptext23                text23       00132E
__ptext24                text24       001102
__ptext25                text25       001180
__ptext26                text26       001388
__ptext27                text27       000BC2
__ptext28                text28       001390
__ptext29                text29       001346
__ptext3                 text3        001316
__ptext30                text30       0011BE
__ptext31                text31       00135E
__ptext32                text32       00126C
__ptext4                 text4        0012CA
__ptext5                 text5        00137E
__ptext6                 text6        0007EA
__ptext7                 text7        000E8C
__ptext8                 text8        000AF0
__ptext9                 text9        000908
__ramtop                 ramtop       000600
__size_of_InitLCD        (abs)        000000
__size_of_SerialReceive  (abs)        000000
__size_of_SerialTransmit (abs)        000000
__size_of_WriteCommon    (abs)        000000
__size_of_WriteCtrl      (abs)        000000
__size_of_WriteData      (abs)        000000
__size_of_WriteLCD       (abs)        000000
__size_of___awdiv        (abs)        000000
__size_of___awmod        (abs)        000000
__size_of___awtoft       (abs)        000000
__size_of___ftadd        (abs)        000000
__size_of___ftmul        (abs)        000000
__size_of___ftpack       (abs)        000000
__size_of___fttol        (abs)        000000
__size_of___wmul         (abs)        000000
__size_of_adcToLcd       (abs)        000000
__size_of_adc_poll       (abs)        000000
__size_of_clear_lcd      (abs)        000000
__size_of_delay          (abs)        000000
__size_of_display_mode   (abs)        000000
__size_of_display_speed  (abs)        000000
__size_of_display_temp   (abs)        000000
__size_of_eval_poly      (abs)        000000
__size_of_frexp          (abs)        000000
__size_of_get_temp       (abs)        000000
__size_of_goto_xy        (abs)        000000
__size_of_hmi_out        (abs)        000000
__size_of_init_adc       (abs)        000000
__size_of_integerToLcd   (abs)        000000
__size_of_log            (abs)        000000
__size_of_main           (abs)        000000
__size_of_pulse_enable   (abs)        000000
__size_of_strlen         (abs)        000000
__smallconst             smallconst   000600
_adcToLcd                text16       001234
_adc_poll                text21       001398
_clear_lcd               text28       001390
_delay                   text32       00126C
_display_mode            text15       0012A2
_display_speed           text14       001370
_display_temp            text4        0012CA
_errno                   bssBANK0     000060
_eval_poly               text8        000AF0
_frexp                   text7        000E8C
_get_temp                text5        00137E
_get_temp$1684           cstackCOMRAM 000052
_goto_xy                 text3        001316
_hmi_out                 text2        000DF6
_init_adc                text1        001142
_integerToLcd            text17       000C94
_log                     text6        0007EA
_main                    text0        0010BE
_mode                    bssBANK0     000062
_pulse_enable            text31       00135E
_speed                   dataCOMRAM   00005D
_state                   dataBANK0    000064
_strlen                  text25       001180
adcToLcd@result          cstackCOMRAM 00001B
delay@i                  cstackCOMRAM 000003
delay@x                  cstackCOMRAM 000001
display_temp@temp        cstackCOMRAM 000059
end_of_initialization    cinit        0010B0
eval_poly@d              cstackCOMRAM 000031
eval_poly@n              cstackCOMRAM 000033
eval_poly@res            cstackCOMRAM 000037
eval_poly@x              cstackCOMRAM 00002E
frexp@eptr               cstackCOMRAM 000004
frexp@value              cstackCOMRAM 000001
get_temp@logres          cstackCOMRAM 000055
get_temp@result          cstackCOMRAM 000057
goto_xy@x                cstackCOMRAM 000008
goto_xy@y                cstackCOMRAM 000007
integerToLcd@hundreds    cstackCOMRAM 000018
integerToLcd@num         cstackCOMRAM 000015
integerToLcd@ones        cstackCOMRAM 00001A
integerToLcd@tens        cstackCOMRAM 000019
integerToLcd@thousands   cstackCOMRAM 000017
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
log@coeff                smallconst   000601
log@exponent             cstackCOMRAM 00003D
log@x                    cstackCOMRAM 00003A
main@state_old           cstackCOMRAM 00005B
stackhi                  (abs)        0005FF
stacklo                  (abs)        000066
start                    init         000000
start_initialization     cinit        001076
strlen@cp                cstackCOMRAM 000005
strlen@s                 cstackCOMRAM 000001


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 89 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  state_old       2   90[COMRAM] int 
 Return value:  Size  Location     Type
                  2   86[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_InitLCD
		_SerialReceive
		_SerialTransmit
		_adcToLcd
		_delay
		_hmi_out
		_init_adc
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _init_adc *****************
 Defined at:
		line 9 in file "sensors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_delay
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _hmi_out *****************
 Defined at:
		line 187 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_WriteLCD
		_clear_lcd
		_delay
		_display_mode
		_display_speed
		_display_temp
		_goto_xy
 This function is called by:
		_main
		_get_input
 This function uses a non-reentrant model


 *************** function _goto_xy *****************
 Defined at:
		line 136 in file "lcd.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    6[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    7[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_WriteCtrl
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _display_temp *****************
 Defined at:
		line 233 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp            2   88[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_WriteData
		_get_temp
		_integerToLcd
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _get_temp *****************
 Defined at:
		line 31 in file "sensors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  result          2   86[COMRAM] int 
  logres          2   84[COMRAM] int 
 Return value:  Size  Location     Type
                  2   77[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___awtoft
		___fttol
		___wmul
		_adc_poll
		_log
 This function is called by:
		_display_temp
		_display_light
 This function uses a non-reentrant model


 *************** function _log *****************
 Defined at:
		line 5 in file "/opt/microchip/xc8/v1.41/sources/common/log.c"
 Parameters:    Size  Location     Type
  x               3   57[COMRAM] int 
 Auto vars:     Size  Location     Type
  exponent        2   60[COMRAM] int 
 Return value:  Size  Location     Type
                  3   57[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awtoft
		___ftadd
		___ftmul
		_eval_poly
		_frexp
 This function is called by:
		_get_temp
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "/opt/microchip/xc8/v1.41/sources/common/frexp.c"
 Parameters:    Size  Location     Type
  value           3    0[COMRAM] int 
  eptr            2    3[COMRAM] PTR int 
		 -> log@exponent(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_log
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/evalpoly.c"
 Parameters:    Size  Location     Type
  x               3   45[COMRAM] PTR int 
  d               2   48[COMRAM] PTR const 
		 -> log@coeff(27), 
  n               2   50[COMRAM] int 
 Auto vars:     Size  Location     Type
  res             3   54[COMRAM] int 
 Return value:  Size  Location     Type
                  3   45[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         7       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___ftadd
		___ftmul
		___wmul
 This function is called by:
		_log
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "/opt/microchip/xc8/v1.41/sources/common/ftmul.c"
 Parameters:    Size  Location     Type
  f1              3   18[COMRAM] float 
  f2              3   21[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   28[COMRAM] unsigned um
  sign            1   32[COMRAM] unsigned char 
  cntr            1   31[COMRAM] unsigned char 
  exp             1   27[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   18[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "/opt/microchip/xc8/v1.41/sources/common/ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   33[COMRAM] float 
  f2              3   36[COMRAM] float 
 Auto vars:     Size  Location     Type
  exp1            1   44[COMRAM] unsigned char 
  exp2            1   43[COMRAM] unsigned char 
  sign            1   42[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   33[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "/opt/microchip/xc8/v1.41/sources/common/awtoft.c"
 Parameters:    Size  Location     Type
  c               2   14[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   14[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_get_temp
		_log
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "/opt/microchip/xc8/v1.41/sources/common/float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMRAM] unsigned um
  exp             1    3[COMRAM] unsigned char 
  sign            1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___awtoft
		___ftadd
		___ftmul
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "/opt/microchip/xc8/v1.41/sources/common/fttol.c"
 Parameters:    Size  Location     Type
  f1              3   62[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   72[COMRAM] unsigned long 
  exp1            1   76[COMRAM] unsigned char 
  sign1           1   71[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   62[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp
 This function uses a non-reentrant model


 *************** function _display_speed *****************
 Defined at:
		line 246 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_integerToLcd
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _display_mode *****************
 Defined at:
		line 225 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_WriteLCD
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _adcToLcd *****************
 Defined at:
		line 176 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  result          2   26[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_WriteLCD
		_adc_poll
		_clear_lcd
		_delay
		_integerToLcd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _integerToLcd *****************
 Defined at:
		line 146 in file "lcd.c"
 Parameters:    Size  Location     Type
  num             2   20[COMRAM] int 
 Auto vars:     Size  Location     Type
  ones            1   25[COMRAM] unsigned char 
  tens            1   24[COMRAM] unsigned char 
  hundreds        1   23[COMRAM] unsigned char 
  thousands       1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_WriteData
		___awdiv
		___awmod
		___wmul
 This function is called by:
		_adcToLcd
		_display_temp
		_display_speed
		_display_light
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   14[COMRAM] unsigned int 
  multiplicand    2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   18[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   14[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp
		_integerToLcd
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_integerToLcd
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    6[COMRAM] int 
  divisor         2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[COMRAM] int 
  sign            1   11[COMRAM] unsigned char 
  counter         1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp
		_integerToLcd
 This function uses a non-reentrant model


 *************** function _adc_poll *****************
 Defined at:
		line 26 in file "sensors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_adcToLcd
		_get_temp
		_get_light
 This function uses a non-reentrant model


 *************** function _WriteLCD *****************
 Defined at:
		line 87 in file "lcd.c"
 Parameters:    Size  Location     Type
  message         2    6[COMRAM] PTR unsigned char 
		 -> STR_5(7), STR_4(5), STR_3(5), STR_2(5), 
 Auto vars:     Size  Location     Type
  i               1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_WriteData
		_delay
 This function is called by:
		_adcToLcd
		_hmi_out
		_display_mode
 This function uses a non-reentrant model


 *************** function _WriteData *****************
 Defined at:
		line 106 in file "lcd.c"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_WriteCommon
		_delay
 This function is called by:
		_display_temp
		_WriteLCD
		_integerToLcd
 This function uses a non-reentrant model


 *************** function _SerialTransmit *****************
 Defined at:
		line 151 in file "hmi.c"
 Parameters:    Size  Location     Type
  buffer          2    6[COMRAM] PTR const unsigned char 
		 -> STR_1(10), 
 Auto vars:     Size  Location     Type
  size            2    8[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_strlen
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> STR_1(10), 
 Auto vars:     Size  Location     Type
  cp              2    4[COMRAM] PTR const unsigned char 
		 -> STR_1(10), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SerialTransmit
 This function uses a non-reentrant model


 *************** function _SerialReceive *****************
 Defined at:
		line 168 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitLCD *****************
 Defined at:
		line 10 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_WriteCtrl
		_clear_lcd
		_delay
		_pulse_enable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _clear_lcd *****************
 Defined at:
		line 5 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_WriteCtrl
 This function is called by:
		_adcToLcd
		_hmi_out
		_InitLCD
 This function uses a non-reentrant model


 *************** function _WriteCtrl *****************
 Defined at:
		line 99 in file "lcd.c"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_WriteCommon
		_delay
 This function is called by:
		_clear_lcd
		_InitLCD
		_goto_xy
 This function uses a non-reentrant model


 *************** function _WriteCommon *****************
 Defined at:
		line 120 in file "lcd.c"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_delay
		_pulse_enable
 This function is called by:
		_WriteCtrl
		_WriteData
 This function uses a non-reentrant model


 *************** function _pulse_enable *****************
 Defined at:
		line 113 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_delay
 This function is called by:
		_InitLCD
		_WriteCommon
 This function uses a non-reentrant model


 *************** function _delay *****************
 Defined at:
		line 216 in file "hmi.c"
 Parameters:    Size  Location     Type
  x               2    0[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2    2[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_adcToLcd
		_hmi_out
		_init_adc
		_InitLCD
		_WriteLCD
		_WriteCtrl
		_WriteData
		_pulse_enable
		_WriteCommon
		_get_input
		_IQS333_setup
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
/opt/microchip/xc8/v1.41/sources/common/awdiv.c
		___awdiv       		CODE           	0F1C	0000	133

/opt/microchip/xc8/v1.41/sources/common/awdiv.c estimated size: 133

/opt/microchip/xc8/v1.41/sources/common/fttol.c
		___fttol       		CODE           	09FC	0000	245

/opt/microchip/xc8/v1.41/sources/common/fttol.c estimated size: 245

sensors.c
		_get_temp      		CODE           	137E	0000	11
		_adc_poll      		CODE           	1398	0000	7
		_init_adc      		CODE           	1142	0000	63

sensors.c estimated size: 81

/opt/microchip/xc8/v1.41/sources/common/ftadd.c
		___ftadd       		CODE           	063E	0000	429

/opt/microchip/xc8/v1.41/sources/common/ftadd.c estimated size: 429

/opt/microchip/xc8/v1.41/sources/common/strlen.c
		_strlen        		CODE           	1180	0000	63

/opt/microchip/xc8/v1.41/sources/common/strlen.c estimated size: 63

/opt/microchip/xc8/v1.41/sources/common/awtoft.c
		___awtoft      		CODE           	11FC	0000	57

/opt/microchip/xc8/v1.41/sources/common/awtoft.c estimated size: 57

/opt/microchip/xc8/v1.41/sources/common/log.c
		_log           		CODE           	07EA	0000	287

/opt/microchip/xc8/v1.41/sources/common/log.c estimated size: 287

hmi.c
		_adcToLcd      		CODE           	1234	0000	57
		_delay         		CODE           	126C	0000	55
		_display_mode  		CODE           	12A2	0000	41
		_display_temp  		CODE           	12CA	0000	39
		_main          		CODE           	10BE	0000	69
		_display_speed 		CODE           	1370	0000	15
		_hmi_out       		CODE           	0DF6	0000	151
		_SerialReceive 		CODE           	1388	0000	9
		_SerialTransmit		CODE           	1102	0000	65

hmi.c estimated size: 501

/opt/microchip/xc8/v1.41/sources/common/float.c
		___ftpack      		CODE           	0D48	0000	175

/opt/microchip/xc8/v1.41/sources/common/float.c estimated size: 175

shared
		__initialization		CODE           	1076	0000	59
		log@coeff      		SMALLCONST     	0601	0000	28

shared estimated size: 87

/opt/microchip/xc8/v1.41/sources/common/awmod.c
		___awmod       		CODE           	0FA0	0000	113

/opt/microchip/xc8/v1.41/sources/common/awmod.c estimated size: 113

/opt/microchip/xc8/v1.41/sources/common/evalpoly.c
		_eval_poly     		CODE           	0AF0	0000	211

/opt/microchip/xc8/v1.41/sources/common/evalpoly.c estimated size: 211

lcd.c
		_WriteCtrl     		CODE           	1346	0000	25
		_integerToLcd  		CODE           	0C94	0000	181
		_WriteData     		CODE           	132E	0000	25
		_WriteLCD      		CODE           	1010	0000	103
		_InitLCD       		CODE           	0BC2	0000	211
		_clear_lcd     		CODE           	1390	0000	9
		_WriteCommon   		CODE           	11BE	0000	63
		_pulse_enable  		CODE           	135E	0000	19
		_goto_xy       		CODE           	1316	0000	25

lcd.c estimated size: 661

/opt/microchip/xc8/v1.41/sources/common/frexp.c
		_frexp         		CODE           	0E8C	0000	145

/opt/microchip/xc8/v1.41/sources/common/frexp.c estimated size: 145

/opt/microchip/xc8/v1.41/sources/common/Umul16.c
		___wmul        		CODE           	12F0	0000	39

/opt/microchip/xc8/v1.41/sources/common/Umul16.c estimated size: 39

/opt/microchip/xc8/v1.41/sources/common/ftmul.c
		___ftmul       		CODE           	0908	0000	245

/opt/microchip/xc8/v1.41/sources/common/ftmul.c estimated size: 245

