Microchip MPLAB XC8 Compiler V1.44 ()

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v1.44/dat/en_msgs.txt -cs \
  -h+dist/default/production/fan.X.production.sym \
  --cmf=dist/default/production/fan.X.production.cmf -z -Q18F45K20 \
  -o/tmp/xcX2ypGfX -Mdist/default/production/fan.X.production.map -E1 \
  -ver=XC8 -ASTACK=0A6h-05ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0600h-06FFhx122 \
  -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=060h-0FFh,0100h-01FFhx5 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcXZzQDFm.obj dist/default/production/fan.X.production.obj 

Object code version is 3.11

Machine type is 18F45K20

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXZzQDFm.obj
                init                                 C2       C2        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/fan.X.production.obj
                intcode                               8        8       BA        4       0
                temp                                 3F       3F        1        1       1
                smallconst                          600      600       34      300       0
                text33                             10D2     10D2       4E      31A       0
                text32                             1082     1082       50      31A       0
                text30                             1244     1244       36      31A       0
                text29                             1360     1360       12      31A       0
                text28                             115E     115E       3E      31A       0
                text27                             1348     1348       18      31A       0
                text26                             1394     1394        8      31A       0
                text25                              BCA      BCA       D2      31A       0
                text24                             138C     138C        8      31A       0
                text23                             1330     1330       18      31A       0
                text22                             101C     101C       66      31A       0
                text21                             139C     139C        6      31A       0
                text20                              F28      F28       84      31A       0
                text19                              FAC      FAC       70      31A       0
                text18                             12CE     12CE       26      31A       0
                text17                              C9C      C9C       BC      31A       0
                text16                             120C     120C       38      31A       0
                text15                             12F4     12F4       24      31A       0
                text14                             1372     1372        E      31A       0
                text13                              902      902       F8      31A       0
                text12                              D58      D58       AE      31A       0
                text11                             11D4     11D4       38      31A       0
                text10                              634      634      1AE      31A       0
                text9                               9FA      9FA       F6      31A       0
                text8                               AF0      AF0       DA      31A       0
                text7                               E98      E98       90      31A       0
                text6                               7E2      7E2      120      31A       0
                text5                              1380     1380        C      31A       0
                text4                              12A8     12A8       26      31A       0
                text3                              1318     1318       18      31A       0
                text2                               E06      E06       92      31A       0
                text1                              1120     1120       3E      31A       0
                text0                              127A     127A       2E      31A       0
                cstackCOMRAM                          1        1       38        1       1
                cstackBANK0                          60       60       44       60       1
                bssBANK0                             A4       A4        2       60       1
                dataCOMRAM                           39       39        4        1       1
                bssCOMRAM                            3D       3D        2        1       1
                cinit                              119C     119C       38      31A       0
                idataCOMRAM                        13A2     13A2        4      31A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8       BA         0
                init                                 C2       C2        4         0
                reset_vec                             0        0        4         0
                text33                             10D2     10D2       4E         0
                text32                             1082     1082       50         0
                text30                             1244     1244       36         0
                text29                             1360     1360       12         0
                text28                             115E     115E       3E         0
                text27                             1348     1348       18         0
                text26                             1394     1394        8         0
                text25                              BCA      BCA       D2         0
                text24                             138C     138C        8         0
                text23                             1330     1330       18         0
                text22                             101C     101C       66         0
                text21                             139C     139C        6         0
                text20                              F28      F28       84         0
                text19                              FAC      FAC       70         0
                text18                             12CE     12CE       26         0
                text17                              C9C      C9C       BC         0
                text16                             120C     120C       38         0
                text15                             12F4     12F4       24         0
                text14                             1372     1372        E         0
                text13                              902      902       F8         0
                text12                              D58      D58       AE         0
                text11                             11D4     11D4       38         0
                text10                              634      634      1AE         0
                text9                               9FA      9FA       F6         0
                text8                               AF0      AF0       DA         0
                text7                               E98      E98       90         0
                text6                               7E2      7E2      120         0
                text5                              1380     1380        C         0
                text4                              12A8     12A8       26         0
                text3                              1318     1318       18         0
                text2                               E06      E06       92         0
                text1                              1120     1120       3E         0
                text0                              127A     127A       2E         0
                cinit                              119C     119C       38         0
                idataCOMRAM                        13A2     13A2        4         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       34         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 3F       3F        1         1
                cstackCOMRAM                          1        1       38         1
                dataCOMRAM                           39       39        4         1
                bssCOMRAM                            3D       3D        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       44         1
                bssBANK0                             A4       A4        2         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00003F  000040         1       1  COMRAM  
                intcode                        000008  0000BE  0000C6         4       0  CODE    
                cstackBANK0                    000060  000046  0000A6        60       1  BANK0   
                smallconst                     000600  000034  000634       300       0  SMALLCON
                text10                         000634  000D72  0013A6       31A       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000A6-0000FF               5A
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           000040-00005F               20
                         0000A6-0005FF              55A
        CODE             000004-000007                4
                         0000C6-0005FF              53A
                         0013A6-007FFF             6C5A
        COMRAM           000040-00005F               20
        CONST            000004-000007                4
                         0000C6-0005FF              53A
                         0013A6-007FFF             6C5A
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0013A6-007FFF             6C5A
        RAM              0000A6-0005FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       0013A6-007FFF              100
        STACK            0000A6-0005FF              55A

                                  Symbol Table

?___awdiv                         cstackCOMRAM 000027
?___awmod                         cstackCOMRAM 000021
?___awtoft                        cstackCOMRAM 00002F
?___ftadd                         cstackBANK0  000069
?___ftmul                         cstackCOMRAM 000033
?___ftpack                        cstackCOMRAM 000021
?___fttol                         cstackBANK0  000086
?___wmul                          cstackCOMRAM 00002F
?_eval_poly                       cstackBANK0  000075
?_frexp                           cstackCOMRAM 000021
?_get_temp                        cstackBANK0  000095
?_log                             cstackBANK0  000081
?_strlen                          cstackCOMRAM 000001
High_Priority_Interrupt@tempChar  cstackCOMRAM 000020
SerialTransmit@buffer             cstackCOMRAM 000009
SerialTransmit@size               cstackCOMRAM 00000C
WriteCommon@value                 cstackCOMRAM 000025
WriteCtrl@value                   cstackCOMRAM 000026
WriteData@value                   cstackCOMRAM 000026
WriteLCD@i                        cstackCOMRAM 00002B
WriteLCD@message                  cstackCOMRAM 000027
_ADCON0                           (abs)        000FC2
_ADCON0bits                       (abs)        000FC2
_ADCON1                           (abs)        000FC1
_ADCON2                           (abs)        000FC0
_ADRESH                           (abs)        000FC4
_ANSEL                            (abs)        000F7E
_ANSELbits                        (abs)        000F7E
_BAUDCONbits                      (abs)        000FB8
_High_Priority_Interrupt          intcode      000008
_INTCONbits                       (abs)        000FF2
_InitLCD                          text25       000BCA
_OSCCONbits                       (abs)        000FD3
_PIE1bits                         (abs)        000F9D
_PIR1bits                         (abs)        000F9E
_PORTCbits                        (abs)        000F82
_PORTD                            (abs)        000F83
_PORTEbits                        (abs)        000F84
_RCIF                             (abs)        007CF5
_RCREG                            (abs)        000FAE
_RCSTA                            (abs)        000FAB
_SPBRG                            (abs)        000FAF
_SSPADD                           (abs)        000FC8
_SSPBUF                           (abs)        000FC9
_SSPCON1bits                      (abs)        000FC6
_SSPCON2bits                      (abs)        000FC5
_SSPSTATbits                      (abs)        000FC7
_SerialReceive                    text24       00138C
_SerialTransmit                   text32       001082
_TRISAbits                        (abs)        000F92
_TRISC                            (abs)        000F94
_TRISCbits                        (abs)        000F94
_TRISD                            (abs)        000F95
_TRISEbits                        (abs)        000F96
_TRMT                             (abs)        007D61
_TXIF                             (abs)        007CF4
_TXREG                            (abs)        000FAD
_TXSTA                            (abs)        000FAC
_WriteCommon                      text28       00115E
_WriteCtrl                        text27       001348
_WriteData                        text23       001330
_WriteLCD                         text22       00101C
__CFG_BOREN$SBORDIS               (abs)        000000
__CFG_BORV$18                     (abs)        000000
__CFG_CCP2MX$PORTC                (abs)        000000
__CFG_CP0$OFF                     (abs)        000000
__CFG_CP1$OFF                     (abs)        000000
__CFG_CP2$OFF                     (abs)        000000
__CFG_CP3$OFF                     (abs)        000000
__CFG_CPB$OFF                     (abs)        000000
__CFG_CPD$OFF                     (abs)        000000
__CFG_EBTR0$OFF                   (abs)        000000
__CFG_EBTR1$OFF                   (abs)        000000
__CFG_EBTR2$OFF                   (abs)        000000
__CFG_EBTR3$OFF                   (abs)        000000
__CFG_EBTRB$OFF                   (abs)        000000
__CFG_FCMEN$OFF                   (abs)        000000
__CFG_FOSC$INTIO67                (abs)        000000
__CFG_HFOFST$ON                   (abs)        000000
__CFG_IESO$OFF                    (abs)        000000
__CFG_LPT1OSC$OFF                 (abs)        000000
__CFG_LVP$OFF                     (abs)        000000
__CFG_MCLRE$ON                    (abs)        000000
__CFG_PBADEN$ON                   (abs)        000000
__CFG_PWRT$OFF                    (abs)        000000
__CFG_STVREN$OFF                  (abs)        000000
__CFG_WDTEN$OFF                   (abs)        000000
__CFG_WDTPS$32768                 (abs)        000000
__CFG_WRT0$OFF                    (abs)        000000
__CFG_WRT1$OFF                    (abs)        000000
__CFG_WRT2$OFF                    (abs)        000000
__CFG_WRT3$OFF                    (abs)        000000
__CFG_WRTB$OFF                    (abs)        000000
__CFG_WRTC$OFF                    (abs)        000000
__CFG_WRTD$OFF                    (abs)        000000
__CFG_XINST$OFF                   (abs)        000000
__HRAM                            (abs)        000000
__Habs1                           abs1         000000
__Hbank0                          bank0        000000
__Hbank1                          bank1        000000
__Hbank2                          bank2        000000
__Hbank3                          bank3        000000
__Hbank4                          bank4        000000
__Hbank5                          bank5        000000
__Hbigbss                         bigbss       000000
__Hbigdata                        bigdata      000000
__Hbigram                         bigram       000000
__Hbss                            bss          000000
__HbssBANK0                       bssBANK0     000000
__HbssCOMRAM                      bssCOMRAM    000000
__Hcinit                          cinit        000000
__Hclrtext                        clrtext      000000
__Hcomram                         comram       000000
__Hconfig                         config       30000E
__Hconst                          const        000000
__HcstackBANK0                    cstackBANK0  000000
__HcstackCOMRAM                   cstackCOMRAM 000000
__Hdata                           data         000000
__HdataCOMRAM                     dataCOMRAM   000000
__Heeprom_data                    eeprom_data  000000
__Hfarbss                         farbss       000000
__Hfardata                        fardata      000000
__Hibigdata                       ibigdata     000000
__Hidata                          idata        000000
__HidataCOMRAM                    idataCOMRAM  000000
__Hidloc                          idloc        200008
__Hifardata                       ifardata     000000
__Hinit                           init         0000C6
__Hintcode                        intcode      0000C2
__Hintcode_body                   intcode_body 000000
__Hintcodelo                      intcodelo    0000C2
__Hintentry                       intentry     000000
__Hintret                         intret       000000
__Hintsave_regs                   intsave_regs 000000
__Hirdata                         irdata       000000
__Hmediumconst                    mediumconst  000000
__HnvFARRAM                       nvFARRAM     000000
__Hnvbit                          nvbit        000000
__Hnvrram                         nvrram       000000
__Hparam                          rparam       000000
__Hpowerup                        powerup      0000C2
__Hram                            ram          000000
__Hramtop                         ramtop       000600
__Hrbit                           rbit         000000
__Hrbss                           rbss         000000
__Hrdata                          rdata        000000
__Hreset_vec                      reset_vec    000004
__Hrparam                         rparam       000000
__Hsfr                            sfr          000000
__Hsmallconst                     smallconst   000634
__Hspace_0                        (abs)        30000E
__Hspace_1                        (abs)        0000A6
__Hspace_2                        (abs)        000000
__Hstack                          stack        000000
__Hstruct                         struct       000000
__Htemp                           temp         000040
__Htext                           text         000000
__Htext0                          text0        000000
__Htext1                          text1        000000
__Htext10                         text10       000000
__Htext11                         text11       000000
__Htext12                         text12       000000
__Htext13                         text13       000000
__Htext14                         text14       000000
__Htext15                         text15       000000
__Htext16                         text16       000000
__Htext17                         text17       000000
__Htext18                         text18       000000
__Htext19                         text19       000000
__Htext2                          text2        000000
__Htext20                         text20       000000
__Htext21                         text21       000000
__Htext22                         text22       000000
__Htext23                         text23       000000
__Htext24                         text24       000000
__Htext25                         text25       000000
__Htext26                         text26       000000
__Htext27                         text27       000000
__Htext28                         text28       000000
__Htext29                         text29       000000
__Htext3                          text3        000000
__Htext30                         text30       000000
__Htext32                         text32       000000
__Htext33                         text33       000000
__Htext4                          text4        000000
__Htext5                          text5        000000
__Htext6                          text6        000000
__Htext7                          text7        000000
__Htext8                          text8        000000
__Htext9                          text9        000000
__LRAM                            (abs)        000001
__Labs1                           abs1         000000
__Lbank0                          bank0        000000
__Lbank1                          bank1        000000
__Lbank2                          bank2        000000
__Lbank3                          bank3        000000
__Lbank4                          bank4        000000
__Lbank5                          bank5        000000
__Lbigbss                         bigbss       000000
__Lbigdata                        bigdata      000000
__Lbigram                         bigram       000000
__Lbss                            bss          000000
__LbssBANK0                       bssBANK0     000000
__LbssCOMRAM                      bssCOMRAM    000000
__Lcinit                          cinit        000000
__Lclrtext                        clrtext      000000
__Lcomram                         comram       000000
__Lconfig                         config       300000
__Lconst                          const        000000
__LcstackBANK0                    cstackBANK0  000000
__LcstackCOMRAM                   cstackCOMRAM 000000
__Ldata                           data         000000
__LdataCOMRAM                     dataCOMRAM   000000
__Leeprom_data                    eeprom_data  000000
__Lfarbss                         farbss       000000
__Lfardata                        fardata      000000
__Libigdata                       ibigdata     000000
__Lidata                          idata        000000
__LidataCOMRAM                    idataCOMRAM  000000
__Lidloc                          idloc        200000
__Lifardata                       ifardata     000000
__Linit                           init         0000C2
__Lintcode                        intcode      000008
__Lintcode_body                   intcode_body 000000
__Lintcodelo                      intcodelo    0000C2
__Lintentry                       intentry     000000
__Lintret                         intret       000000
__Lintsave_regs                   intsave_regs 000000
__Lirdata                         irdata       000000
__Lmediumconst                    mediumconst  000000
__LnvFARRAM                       nvFARRAM     000000
__Lnvbit                          nvbit        000000
__Lnvrram                         nvrram       000000
__Lparam                          rparam       000000
__Lpowerup                        powerup      0000C2
__Lram                            ram          000000
__Lramtop                         ramtop       000600
__Lrbit                           rbit         000000
__Lrbss                           rbss         000000
__Lrdata                          rdata        000000
__Lreset_vec                      reset_vec    000000
__Lrparam                         rparam       000000
__Lsfr                            sfr          000000
__Lsmallconst                     smallconst   000600
__Lspace_0                        (abs)        000000
__Lspace_1                        (abs)        000000
__Lspace_2                        (abs)        000000
__Lstack                          stack        000000
__Lstruct                         struct       000000
__Ltemp                           temp         00003F
__Ltext                           text         000000
__Ltext0                          text0        000000
__Ltext1                          text1        000000
__Ltext10                         text10       000000
__Ltext11                         text11       000000
__Ltext12                         text12       000000
__Ltext13                         text13       000000
__Ltext14                         text14       000000
__Ltext15                         text15       000000
__Ltext16                         text16       000000
__Ltext17                         text17       000000
__Ltext18                         text18       000000
__Ltext19                         text19       000000
__Ltext2                          text2        000000
__Ltext20                         text20       000000
__Ltext21                         text21       000000
__Ltext22                         text22       000000
__Ltext23                         text23       000000
__Ltext24                         text24       000000
__Ltext25                         text25       000000
__Ltext26                         text26       000000
__Ltext27                         text27       000000
__Ltext28                         text28       000000
__Ltext29                         text29       000000
__Ltext3                          text3        000000
__Ltext30                         text30       000000
__Ltext32                         text32       000000
__Ltext33                         text33       000000
__Ltext4                          text4        000000
__Ltext5                          text5        000000
__Ltext6                          text6        000000
__Ltext7                          text7        000000
__Ltext8                          text8        000000
__Ltext9                          text9        000000
__S0                              (abs)        30000E
__S1                              (abs)        0000A6
__S2                              (abs)        000000
___awdiv                          text20       000F28
___awdiv@counter                  cstackCOMRAM 00002B
___awdiv@dividend                 cstackCOMRAM 000027
___awdiv@divisor                  cstackCOMRAM 000029
___awdiv@quotient                 cstackCOMRAM 00002D
___awdiv@sign                     cstackCOMRAM 00002C
___awmod                          text19       000FAC
___awmod@counter                  cstackCOMRAM 000025
___awmod@dividend                 cstackCOMRAM 000021
___awmod@divisor                  cstackCOMRAM 000023
___awmod@sign                     cstackCOMRAM 000026
___awtoft                         text11       0011D4
___awtoft@c                       cstackCOMRAM 00002F
___awtoft@sign                    cstackCOMRAM 000032
___ftadd                          text10       000634
___ftadd@exp1                     cstackBANK0  000074
___ftadd@exp2                     cstackBANK0  000073
___ftadd@f1                       cstackBANK0  000069
___ftadd@f2                       cstackBANK0  00006C
___ftadd@sign                     cstackBANK0  000072
___ftmul                          text9        0009FA
___ftmul@cntr                     cstackBANK0  000067
___ftmul@exp                      cstackBANK0  000063
___ftmul@f1                       cstackCOMRAM 000033
___ftmul@f2                       cstackCOMRAM 000036
___ftmul@f3_as_product            cstackBANK0  000064
___ftmul@sign                     cstackBANK0  000068
___ftpack                         text12       000D58
___ftpack@arg                     cstackCOMRAM 000021
___ftpack@exp                     cstackCOMRAM 000024
___ftpack@sign                    cstackCOMRAM 000025
___fttol                          text13       000902
___fttol@exp1                     cstackBANK0  000094
___fttol@f1                       cstackBANK0  000086
___fttol@lval                     cstackBANK0  000090
___fttol@sign1                    cstackBANK0  00008F
___inthi_sp                       stack        000000
___intlo_sp                       stack        000000
___param_bank                     (abs)        000000
___rparam_used                    (abs)        000001
___sp                             stack        000000
___wmul                           text18       0012CE
___wmul@multiplicand              cstackCOMRAM 000031
___wmul@multiplier                cstackCOMRAM 00002F
___wmul@product                   cstackCOMRAM 000033
__accesstop                       (abs)        000060
__activetblptr                    (abs)        000002
__end_of_High_Priority_Interrupt  intcode      0000C2
__end_of_InitLCD                  text25       000C9C
__end_of_SerialReceive            text24       001394
__end_of_SerialTransmit           text32       0010D2
__end_of_WriteCommon              text28       00119C
__end_of_WriteCtrl                text27       001360
__end_of_WriteData                text23       001348
__end_of_WriteLCD                 text22       001082
__end_of___awdiv                  text20       000FAC
__end_of___awmod                  text19       00101C
__end_of___awtoft                 text11       00120C
__end_of___ftadd                  text10       0007E2
__end_of___ftmul                  text9        000AF0
__end_of___ftpack                 text12       000E06
__end_of___fttol                  text13       0009FA
__end_of___wmul                   text18       0012F4
__end_of__initialization          cinit        0011C6
__end_of_adcToLcd                 text16       001244
__end_of_adc_poll                 text21       0013A2
__end_of_clear_lcd                text26       00139C
__end_of_delay                    text30       00127A
__end_of_display_mode             text15       001318
__end_of_display_speed            text14       001380
__end_of_display_temp             text4        0012CE
__end_of_eval_poly                text8        000BCA
__end_of_frexp                    text7        000F28
__end_of_get_temp                 text5        00138C
__end_of_goto_xy                  text3        001330
__end_of_hmi_out                  text2        000E98
__end_of_init_adc                 text1        00115E
__end_of_integerToLcd             text17       000D58
__end_of_log                      text6        000902
__end_of_main                     text0        0012A8
__end_of_pulse_enable             text29       001372
__end_of_strlen                   text33       001120
__end_oflog@coeff                 smallconst   00061C
__initialization                  cinit        00119C
__mediumconst                     mediumconst  000000
__pbssBANK0                       bssBANK0     0000A4
__pbssCOMRAM                      bssCOMRAM    00003D
__pcinit                          cinit        00119C
__pcstackBANK0                    cstackBANK0  000060
__pcstackCOMRAM                   cstackCOMRAM 000001
__pdataCOMRAM                     dataCOMRAM   000039
__pidataCOMRAM                    idataCOMRAM  0013A2
__pintcode                        intcode      000008
__psmallconst                     smallconst   000600
__ptext0                          text0        00127A
__ptext1                          text1        001120
__ptext10                         text10       000634
__ptext11                         text11       0011D4
__ptext12                         text12       000D58
__ptext13                         text13       000902
__ptext14                         text14       001372
__ptext15                         text15       0012F4
__ptext16                         text16       00120C
__ptext17                         text17       000C9C
__ptext18                         text18       0012CE
__ptext19                         text19       000FAC
__ptext2                          text2        000E06
__ptext20                         text20       000F28
__ptext21                         text21       00139C
__ptext22                         text22       00101C
__ptext23                         text23       001330
__ptext24                         text24       00138C
__ptext25                         text25       000BCA
__ptext26                         text26       001394
__ptext27                         text27       001348
__ptext28                         text28       00115E
__ptext29                         text29       001360
__ptext3                          text3        001318
__ptext30                         text30       001244
__ptext32                         text32       001082
__ptext33                         text33       0010D2
__ptext4                          text4        0012A8
__ptext5                          text5        001380
__ptext6                          text6        0007E2
__ptext7                          text7        000E98
__ptext8                          text8        000AF0
__ptext9                          text9        0009FA
__ramtop                          ramtop       000600
__size_of_High_Priority_Interrupt (abs)        000000
__size_of_InitLCD                 (abs)        000000
__size_of_SerialReceive           (abs)        000000
__size_of_SerialTransmit          (abs)        000000
__size_of_WriteCommon             (abs)        000000
__size_of_WriteCtrl               (abs)        000000
__size_of_WriteData               (abs)        000000
__size_of_WriteLCD                (abs)        000000
__size_of___awdiv                 (abs)        000000
__size_of___awmod                 (abs)        000000
__size_of___awtoft                (abs)        000000
__size_of___ftadd                 (abs)        000000
__size_of___ftmul                 (abs)        000000
__size_of___ftpack                (abs)        000000
__size_of___fttol                 (abs)        000000
__size_of___wmul                  (abs)        000000
__size_of_adcToLcd                (abs)        000000
__size_of_adc_poll                (abs)        000000
__size_of_clear_lcd               (abs)        000000
__size_of_delay                   (abs)        000000
__size_of_display_mode            (abs)        000000
__size_of_display_speed           (abs)        000000
__size_of_display_temp            (abs)        000000
__size_of_eval_poly               (abs)        000000
__size_of_frexp                   (abs)        000000
__size_of_get_temp                (abs)        000000
__size_of_goto_xy                 (abs)        000000
__size_of_hmi_out                 (abs)        000000
__size_of_init_adc                (abs)        000000
__size_of_integerToLcd            (abs)        000000
__size_of_log                     (abs)        000000
__size_of_main                    (abs)        000000
__size_of_pulse_enable            (abs)        000000
__size_of_strlen                  (abs)        000000
__smallconst                      smallconst   000600
_adcToLcd                         text16       00120C
_adc_poll                         text21       00139C
_clear_lcd                        text26       001394
_delay                            text30       001244
_display_mode                     text15       0012F4
_display_speed                    text14       001372
_display_temp                     text4        0012A8
_errno                            bssBANK0     0000A4
_eval_poly                        text8        000AF0
_frexp                            text7        000E98
_get_temp                         text5        001380
_get_temp$1821                    cstackBANK0  000099
_goto_xy                          text3        001318
_hmi_out                          text2        000E06
_init_adc                         text1        001120
_integerToLcd                     text17       000C9C
_log                              text6        0007E2
_main                             text0        00127A
_mode                             bssCOMRAM    00003D
_pulse_enable                     text29       001360
_speed                            dataCOMRAM   00003B
_state                            dataCOMRAM   000039
_strlen                           text33       0010D2
adcToLcd@result                   cstackCOMRAM 000037
btemp                             temp         00003F
delay@i                           cstackCOMRAM 000023
delay@x                           cstackCOMRAM 000021
display_temp@temp                 cstackBANK0  0000A0
end_of_initialization             cinit        0011C6
eval_poly@d                       cstackBANK0  000078
eval_poly@n                       cstackBANK0  00007A
eval_poly@res                     cstackBANK0  00007E
eval_poly@x                       cstackBANK0  000075
frexp@eptr                        cstackCOMRAM 000024
frexp@value                       cstackCOMRAM 000021
get_temp@logres                   cstackBANK0  00009C
get_temp@result                   cstackBANK0  00009E
goto_xy@x                         cstackCOMRAM 000028
goto_xy@y                         cstackCOMRAM 000027
int$flags                         temp         00003F
integerToLcd@hundreds             cstackBANK0  000061
integerToLcd@num                  cstackCOMRAM 000035
integerToLcd@ones                 cstackBANK0  000063
integerToLcd@tens                 cstackBANK0  000062
integerToLcd@thousands            cstackBANK0  000060
intlevel0                         text         000000
intlevel1                         text         000000
intlevel2                         text         000000
intlevel3                         text         000000
log@coeff                         smallconst   000601
log@exponent                      cstackBANK0  000084
log@x                             cstackBANK0  000081
main@state_old                    cstackBANK0  0000A2
stackhi                           (abs)        0005FF
stacklo                           (abs)        0000A6
start                             init         0000C2
start_initialization              cinit        00119C
strlen@cp                         cstackCOMRAM 000006
strlen@s                          cstackCOMRAM 000001
wtemp6                            temp         000040


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 91 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  state_old       2   66[BANK0 ] int 
 Return value:  Size  Location     Type
                  2  111[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_InitLCD
		_SerialReceive
		_adcToLcd
		_delay
		_hmi_out
		_init_adc
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _init_adc *****************
 Defined at:
		line 9 in file "sensors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_delay
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _hmi_out *****************
 Defined at:
		line 166 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_WriteLCD
		_clear_lcd
		_delay
		_display_mode
		_display_speed
		_display_temp
		_goto_xy
 This function is called by:
		_main
		_get_input
 This function uses a non-reentrant model


 *************** function _goto_xy *****************
 Defined at:
		line 136 in file "lcd.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1   38[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1   39[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_WriteCtrl
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _display_temp *****************
 Defined at:
		line 212 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp            2   64[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_WriteData
		_get_temp
		_integerToLcd
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _get_temp *****************
 Defined at:
		line 31 in file "sensors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  result          2   62[BANK0 ] int 
  logres          2   60[BANK0 ] int 
 Return value:  Size  Location     Type
                  2   53[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       2       0       0       0       0       0
      Locals:         0       7       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0      11       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awdiv
		___awtoft
		___fttol
		___wmul
		_adc_poll
		_log
 This function is called by:
		_display_temp
		_display_light
 This function uses a non-reentrant model


 *************** function _log *****************
 Defined at:
		line 5 in file "/opt/microchip/xc8/v1.44/sources/common/log.c"
 Parameters:    Size  Location     Type
  x               3   33[BANK0 ] int 
 Auto vars:     Size  Location     Type
  exponent        2   36[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   33[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       5       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awtoft
		___ftadd
		___ftmul
		_eval_poly
		_frexp
 This function is called by:
		_get_temp
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "/opt/microchip/xc8/v1.44/sources/common/frexp.c"
 Parameters:    Size  Location     Type
  value           3   32[COMRAM] int 
  eptr            2   35[COMRAM] PTR int 
		 -> log@exponent(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   32[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_log
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 4 in file "/opt/microchip/xc8/v1.44/sources/common/evalpoly.c"
 Parameters:    Size  Location     Type
  x               3   21[BANK0 ] PTR int 
  d               2   24[BANK0 ] PTR const 
		 -> log@coeff(27), 
  n               2   26[BANK0 ] int 
 Auto vars:     Size  Location     Type
  res             3   30[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   21[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       7       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0      12       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___ftadd
		___ftmul
		___wmul
 This function is called by:
		_log
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "/opt/microchip/xc8/v1.44/sources/common/ftmul.c"
 Parameters:    Size  Location     Type
  f1              3   50[COMRAM] float 
  f2              3   53[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3    4[BANK0 ] unsigned um
  sign            1    8[BANK0 ] unsigned char 
  cntr            1    7[BANK0 ] unsigned char 
  exp             1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   50[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0
      Totals:         6       9       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "/opt/microchip/xc8/v1.44/sources/common/ftadd.c"
 Parameters:    Size  Location     Type
  f1              3    9[BANK0 ] float 
  f2              3   12[BANK0 ] float 
 Auto vars:     Size  Location     Type
  exp1            1   20[BANK0 ] unsigned char 
  exp2            1   19[BANK0 ] unsigned char 
  sign            1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    9[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0
      Totals:         0      12       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "/opt/microchip/xc8/v1.44/sources/common/awtoft.c"
 Parameters:    Size  Location     Type
  c               2   46[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   49[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   46[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_get_temp
		_log
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "/opt/microchip/xc8/v1.44/sources/common/float.c"
 Parameters:    Size  Location     Type
  arg             3   32[COMRAM] unsigned um
  exp             1   35[COMRAM] unsigned char 
  sign            1   36[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   32[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		___awtoft
		___ftadd
		___ftmul
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "/opt/microchip/xc8/v1.44/sources/common/fttol.c"
 Parameters:    Size  Location     Type
  f1              3   38[BANK0 ] float 
 Auto vars:     Size  Location     Type
  lval            4   48[BANK0 ] unsigned long 
  exp1            1   52[BANK0 ] unsigned char 
  sign1           1   47[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   38[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       4       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       5       0       0       0       0       0
      Totals:         0      15       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_temp
 This function uses a non-reentrant model


 *************** function _display_speed *****************
 Defined at:
		line 225 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_integerToLcd
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _display_mode *****************
 Defined at:
		line 204 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_WriteLCD
 This function is called by:
		_hmi_out
 This function uses a non-reentrant model


 *************** function _adcToLcd *****************
 Defined at:
		line 155 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  result          2   54[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_WriteLCD
		_adc_poll
		_clear_lcd
		_delay
		_integerToLcd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _integerToLcd *****************
 Defined at:
		line 146 in file "lcd.c"
 Parameters:    Size  Location     Type
  num             2   52[COMRAM] int 
 Auto vars:     Size  Location     Type
  ones            1    3[BANK0 ] unsigned char 
  tens            1    2[BANK0 ] unsigned char 
  hundreds        1    1[BANK0 ] unsigned char 
  thousands       1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       4       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_WriteData
		___awdiv
		___awmod
		___wmul
 This function is called by:
		_adcToLcd
		_display_temp
		_display_speed
		_display_light
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/opt/microchip/xc8/v1.44/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   46[COMRAM] unsigned int 
  multiplicand    2   48[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   50[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   46[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_temp
		_integerToLcd
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   32[COMRAM] int 
  divisor         2   34[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   37[COMRAM] unsigned char 
  counter         1   36[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   32[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_integerToLcd
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   38[COMRAM] int 
  divisor         2   40[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   44[COMRAM] int 
  sign            1   43[COMRAM] unsigned char 
  counter         1   42[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   38[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_temp
		_integerToLcd
 This function uses a non-reentrant model


 *************** function _adc_poll *****************
 Defined at:
		line 26 in file "sensors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_adcToLcd
		_get_temp
		_get_light
 This function uses a non-reentrant model


 *************** function _WriteLCD *****************
 Defined at:
		line 87 in file "lcd.c"
 Parameters:    Size  Location     Type
  message         2   38[COMRAM] PTR unsigned char 
		 -> STR_4(7), STR_3(5), STR_2(5), STR_1(5), 
 Auto vars:     Size  Location     Type
  i               1   42[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_WriteData
		_delay
 This function is called by:
		_adcToLcd
		_hmi_out
		_display_mode
 This function uses a non-reentrant model


 *************** function _WriteData *****************
 Defined at:
		line 106 in file "lcd.c"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1   37[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_WriteCommon
		_delay
 This function is called by:
		_display_temp
		_WriteLCD
		_integerToLcd
 This function uses a non-reentrant model


 *************** function _SerialReceive *****************
 Defined at:
		line 70 in file "serial.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitLCD *****************
 Defined at:
		line 10 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_WriteCtrl
		_clear_lcd
		_delay
		_pulse_enable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _clear_lcd *****************
 Defined at:
		line 5 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_WriteCtrl
 This function is called by:
		_adcToLcd
		_hmi_out
		_InitLCD
 This function uses a non-reentrant model


 *************** function _WriteCtrl *****************
 Defined at:
		line 99 in file "lcd.c"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1   37[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_WriteCommon
		_delay
 This function is called by:
		_clear_lcd
		_InitLCD
		_goto_xy
 This function uses a non-reentrant model


 *************** function _WriteCommon *****************
 Defined at:
		line 120 in file "lcd.c"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1   36[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_delay
		_pulse_enable
 This function is called by:
		_WriteCtrl
		_WriteData
 This function uses a non-reentrant model


 *************** function _pulse_enable *****************
 Defined at:
		line 113 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_delay
 This function is called by:
		_InitLCD
		_WriteCommon
 This function uses a non-reentrant model


 *************** function _delay *****************
 Defined at:
		line 195 in file "hmi.c"
 Parameters:    Size  Location     Type
  x               2   32[COMRAM] int 
 Auto vars:     Size  Location     Type
  i               2   34[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
		_adcToLcd
		_hmi_out
		_init_adc
		_InitLCD
		_WriteLCD
		_WriteCtrl
		_WriteData
		_pulse_enable
		_WriteCommon
		_get_input
		_IQS333_setup
 This function uses a non-reentrant model


 *************** function _High_Priority_Interrupt *****************
 Defined at:
		line 265 in file "hmi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempChar        1   31[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:         18       0       0       0       0       0       0
      Totals:        19       0       0       0       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_SerialTransmit
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _SerialTransmit *****************
 Defined at:
		line 53 in file "serial.h"
 Parameters:    Size  Location     Type
  buffer          3    8[COMRAM] PTR const unsigned char 
		 -> ROM(32767), 
 Auto vars:     Size  Location     Type
  size            2   11[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_strlen
 This function is called by:
		_High_Priority_Interrupt
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 4 in file "/opt/microchip/xc8/v1.44/sources/common/strlen.c"
 Parameters:    Size  Location     Type
  s               3    0[COMRAM] PTR const unsigned char 
		 -> ROM(32767), 
 Auto vars:     Size  Location     Type
  cp              3    5[COMRAM] PTR const unsigned char 
		 -> ROM(32767), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SerialTransmit
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
/opt/microchip/xc8/v1.44/sources/common/float.c
		___ftpack      		CODE           	0D58	0000	175

/opt/microchip/xc8/v1.44/sources/common/float.c estimated size: 175

serial.h
		_SerialReceive 		CODE           	138C	0000	9
		_SerialTransmit		CODE           	1082	0000	81

serial.h estimated size: 90

/opt/microchip/xc8/v1.44/sources/common/log.c
		_log           		CODE           	07E2	0000	289

/opt/microchip/xc8/v1.44/sources/common/log.c estimated size: 289

/opt/microchip/xc8/v1.44/sources/common/frexp.c
		_frexp         		CODE           	0E98	0000	145

/opt/microchip/xc8/v1.44/sources/common/frexp.c estimated size: 145

/opt/microchip/xc8/v1.44/sources/common/Umul16.c
		___wmul        		CODE           	12CE	0000	39

/opt/microchip/xc8/v1.44/sources/common/Umul16.c estimated size: 39

sensors.c
		_get_temp      		CODE           	1380	0000	13
		_adc_poll      		CODE           	139C	0000	7
		_init_adc      		CODE           	1120	0000	63

sensors.c estimated size: 83

/opt/microchip/xc8/v1.44/sources/common/evalpoly.c
		_eval_poly     		CODE           	0AF0	0000	219

/opt/microchip/xc8/v1.44/sources/common/evalpoly.c estimated size: 219

/opt/microchip/xc8/v1.44/sources/common/ftmul.c
		___ftmul       		CODE           	09FA	0000	247

/opt/microchip/xc8/v1.44/sources/common/ftmul.c estimated size: 247

/opt/microchip/xc8/v1.44/sources/common/awmod.c
		___awmod       		CODE           	0FAC	0000	113

/opt/microchip/xc8/v1.44/sources/common/awmod.c estimated size: 113

hmi.c
		_adcToLcd      		CODE           	120C	0000	57
		_delay         		CODE           	1244	0000	55
		_display_mode  		CODE           	12F4	0000	37
		_display_temp  		CODE           	12A8	0000	39
		_main          		CODE           	127A	0000	47
		_display_speed 		CODE           	1372	0000	15
		_hmi_out       		CODE           	0E06	0000	147
		_High_Priority_Interrupt		CODE           	0008	0000	187

hmi.c estimated size: 584

/opt/microchip/xc8/v1.44/sources/common/fttol.c
		___fttol       		CODE           	0902	0000	249

/opt/microchip/xc8/v1.44/sources/common/fttol.c estimated size: 249

shared
		__initialization		CODE           	119C	0000	43
		log@coeff      		SMALLCONST     	0601	0000	28

shared estimated size: 71

/opt/microchip/xc8/v1.44/sources/common/awdiv.c
		___awdiv       		CODE           	0F28	0000	133

/opt/microchip/xc8/v1.44/sources/common/awdiv.c estimated size: 133

/opt/microchip/xc8/v1.44/sources/common/strlen.c
		_strlen        		CODE           	10D2	0000	79

/opt/microchip/xc8/v1.44/sources/common/strlen.c estimated size: 79

/opt/microchip/xc8/v1.44/sources/common/ftadd.c
		___ftadd       		CODE           	0634	0000	431

/opt/microchip/xc8/v1.44/sources/common/ftadd.c estimated size: 431

/opt/microchip/xc8/v1.44/sources/common/awtoft.c
		___awtoft      		CODE           	11D4	0000	57

/opt/microchip/xc8/v1.44/sources/common/awtoft.c estimated size: 57

lcd.c
		_WriteCtrl     		CODE           	1348	0000	25
		_integerToLcd  		CODE           	0C9C	0000	189
		_WriteData     		CODE           	1330	0000	25
		_WriteLCD      		CODE           	101C	0000	103
		_InitLCD       		CODE           	0BCA	0000	211
		_clear_lcd     		CODE           	1394	0000	9
		_WriteCommon   		CODE           	115E	0000	63
		_pulse_enable  		CODE           	1360	0000	19
		_goto_xy       		CODE           	1318	0000	25

lcd.c estimated size: 669

